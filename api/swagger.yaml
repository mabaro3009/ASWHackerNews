swagger: '2.0'
info:
  description: HackerNews
  version: 1.0.0
  title: HackerNews
  termsOfService: 'https://news.ycombinator.com/'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
securityDefinitions:
  Token:
    type: apiKey
    description: >-
      Té la clau de usuari generada. Es pot extreure desde la interficie grafica
      de la aplicació
    name: Authorization
    in: header
host: 'localhost:3000'
basePath: /api
tags:
  - name: posts
    description: Publicaciones
  - name: comments
    description: Comentarios
  - name: Users
    description: Usuarios
schemes:
  - http
paths:
  /posts:
    get:
      tags:
        - posts
      summary: Get all the URLs
      description: ''
      responses:
        '200':
          description: Get all URLs
    post:
      tags:
        - posts
      summary: Crear un post
      description: Crear un post
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      security:
        - Token: []
      parameters:
        - name: title
          in: formData
          description: Titulo del post
          required: true
          type: string
        - name: tipo
          in: formData
          description: Tipo del post
          required: true
          type: string
        - name: content
          in: formData
          description: Tipo del post
          required: true
          type: string
      responses:
        '200':
          description: Succesfully created
          schema:
            $ref: '#/definitions/Post'
        '400':
          description: No existe el comentario
          schema:
            type: object
            properties:
              error:
                type: string
        '401':
          description: No autoritzat
          schema:
            type: object
            properties:
              error:
                type: string
    delete:
      tags:
        - posts
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      security:
        - Token: []
      parameters:
        - name: post_id
          in: formData
          description: Identificador del post
          required: true
          type: number
      responses:
        '200':
          description: Succesfully created
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: No existe el comentario
          schema:
            type: object
            properties:
              error:
                type: string
        '401':
          description: No autoritzat
          schema:
            type: object
            properties:
              error:
                type: string
  '/posts/{post_id}':
    get:
      tags:
        - posts
      summary: Find post by ID
      description: Returns a single post
      produces:
        - application/json
      parameters:
        - name: post_id
          in: path
          description: ID of post to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Post'
        '400':
          description: Invalid ID supplied
        '404':
          description: Post not found
  /ask:
    get:
      tags:
        - posts
      summary: Get all the Asks
      description: ''
      responses:
        '200':
          description: Get all Asks
          schema:
            $ref: '#/definitions/Post'
  /comments:
    post:
      tags:
        - comments
      description: |
        Crea un nuevo comentario para un post
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      security:
        - Token: []
      parameters:
        - name: comment
          in: formData
          description: Texto del comentario
          required: true
          type: string
        - name: post_id
          in: formData
          description: Identificador del post
          required: true
          type: number
      responses:
        '200':
          description: Succesfully created
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: No existe el comentario
          schema:
            type: object
            properties:
              error:
                type: string
        '401':
          description: No autoritzat
          schema:
            type: object
            properties:
              error:
                type: string
  /reply:
    post:
      tags:
        - comments
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      security:
        - Token: []
      description: |
        Crea un nuevo reply para un comentario
      parameters:
        - name: comment
          in: formData
          description: Texto del comentario
          required: true
          type: string
        - name: post_id
          in: formData
          description: Identificador del post
          required: true
          type: number
        - name: parent_id
          in: formData
          description: Identificador del comentario que cuelga
          required: true
          type: number
      responses:
        '200':
          description: Succesfully created
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: No existe el comentario
          schema:
            type: object
            properties:
              error:
                type: string
        '401':
          description: No autoritzat
          schema:
            type: object
            properties:
              error:
                type: string
  /deleteComment:
    delete:
      tags:
        - comments
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      security:
        - Token: []
      description: |
        Crea un nuevo reply para un comentario
      parameters:
        - name: id
          in: formData
          description: Identificador del comentario
          required: true
          type: number
      responses:
        '200':
          description: Succesfully created
          schema:
            $ref: '#/definitions/Comment'
        '400':
          description: No existe el comentario
          schema:
            type: object
            properties:
              error:
                type: string
        '401':
          description: No autoritzat
          schema:
            type: object
            properties:
              error:
                type: string
  /upvote:
    post:
      tags:
        - votes
      summary: Votar un post
      description: Votar un post
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      security:
        - Token: []
      parameters:
        - name: post_id
          in: formData
          description: Identificador del post
          required: true
          type: number
      responses:
        '200':
          description: Succesfully created
          schema:
            $ref: '#/definitions/Upvote'
        '400':
          description: No existe el post
          schema:
            type: object
            properties:
              error:
                type: string
    delete:
      tags:
        - votes
      summary: Desfer el vot
      description: Desfer el vot
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      security:
        - Token: []
      parameters:
        - name: post_id
          in: formData
          description: Identificador del post
          required: true
          type: number
      responses:
        '200':
          description: Succesfully created
          schema:
            $ref: '#/definitions/Upvote'
        '400':
          description: No existe el post
          schema:
            type: object
            properties:
              error:
                type: string
        '404':
          description: No existe el voto
          schema:
            type: object
            properties:
              error:
                type: string
                
  /users:
    post:
      tags:
        -  Users
      summary: Crear un User 
      description: Metodo post para crear un usuario nuevo
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: post_id
          in: formData
          description: Identificador del post
          required: true
          type: number
      responses:
        '200':
          description: Succesfully created
          schema:
            $ref: '#/definitions/Upvote'
        '400':
          description: No existe el post
          schema:
            type: object
            properties:
              error:
                type: string
        '404':
          description: No existe el voto
          schema:
            type: object
            properties:
              error:
                type: string
                
  '/users/{id}':
    get:
      tags:
        -  Users
      summary: Busca el usuario de la id pasada
      description: Metodo GET que a partir de la id pasada te devuelve su informacion
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of User to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Users
        '400':
          description: Invalid ID supplied
        '404':
          description: Post not found
      
  
definitions:
  Post:
    type: object
    required:
      - title
      - tipo
    properties:
      id:
        type: integer
        format: int64
      title:
        type: string
      url:
        type: string
      text:
        type: string
      user_id:
        type: integer
        format: int64
      created_at:
        type: string
        format: datetime
      updated_at:
        type: string
        format: datetime
      tipo:
        type: string
      votes:
        type: integer
        format: int64
      nComments:
        type: integer
        format: int64
      upvotes_count:
        type: integer
        format: int64
    xml:
      name: Post
  Comment:
    type: object
    properties:
      id:
        type: integer
        format: int64
      text:
        type: string
      votes:
        type: integer
        format: int64
      parent_id:
        type: integer
        format: int64
      created_at:
        type: string
        format: datetime
      updated_at:
        type: string
        format: datetime
      post_id:
        type: integer
        format: int64
      user_id:
        type: integer
        format: int64
      tipus:
        type: string
    xml:
      name: Comment
  Upvote:
    type: object
    properties:
      id:
        type: integer
        format: int64
      post_id:
        type: integer
        format: int64
      user_id:
        type: integer
        format: int64
    xml:
      name: Upvote
  Users:
    type: object
    properties:
      provider:
        type: string
      uid:
        type: integer
        format: int64
      name:
        type: string
      token:
        type: string
      secret:
        type: string
      profile_image:
        type: string
      created_at:
        type: string
        format: datetime
      updated_at:
        type: string
        format: datetime
      about:
        type: string
      apiKey:
        type: string
    xml:
      name: USers
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
